[package]
name = "leptos-webgpu-editor"
version = "0.1.0"
edition = "2024"

[target.'cfg(target_arch = "wasm32")'.dependencies]
wgpu = { version = "0.20", features = ["webgl"] }

[package.metadata.wasm-pack.profile.release]
wasm-opt = ["-O4", "--enable-simd"]

[profile.dev]
opt-level = 0          # no optimizations
debug = true           # full debug info
incremental = true     # enable incremental builds
codegen-units = 16     # more parallel codegen
overflow-checks = false

[profile.release]
opt-level = "z"        # optimize for size
debug = false          # no debug info
lto = "fat"            # fat link time optimization
codegen-units = 1      # single codegen unit for better optimization
panic = "abort"        # smaller wasm size
overflow-checks = false
strip = true           # remove debug symbols

# Size-optimized release profile
[profile.release-size]
inherits = "release"
opt-level = "z"
lto = "fat"
codegen-units = 1
panic = "abort"
strip = true

# Target-specific optimizations for wasm
[profile.release.package."*"]
opt-level = 3

# Enable target-cpu features for better performance
[env]
RUSTFLAGS = "-C target-cpu=native"

[profile.release-with-debug]
inherits = "release"
debug = true
strip = false

[dependencies]
leptos = { version = "0.8.3", default-features = false, features = ["csr"] }
getrandom = { version = "0.2", features = ["js"] }
wasm-bindgen = "0.2"
wasm-bindgen-futures = "0.4"
js-sys = "0.3"
fontdue = "0.8"
sdf_glyph_renderer = "1.0.2"
idb = "0.6"
rexie = "0.6"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"

[target.wasm32-unknown-unknown.dependencies]
# Enable SIMD features for wasm

[dependencies.web-sys]
version = "0.3.77"
default-features = false
features = [
  "Window",
  "Document",
  "Element",
  "Node",
  "EventTarget",
  "HtmlElement",
  "HtmlCanvasElement",
  "console",
  "Navigator",
  "Gpu",
  "GpuAdapter",
  "GpuDevice",
  "GpuCanvasContext",
  "GpuCanvasConfiguration",
  "GpuTexture",
  "GpuTextureFormat",
  "GpuTextureDescriptor",
  "GpuTextureView",
  "GpuTexelCopyBufferLayout",
  "GpuTexelCopyTextureInfo",
  "GpuSampler",
  "GpuMipmapFilterMode",
  "GpuSamplerDescriptor",
  "GpuBindGroup",
  "GpuBindGroupDescriptor",
  "GpuBindGroupLayout",
  "GpuBindGroupLayoutDescriptor",
  "GpuBindGroupLayoutEntry",
  "GpuBindGroupEntry",
  "GpuBlendComponent",
  "GpuBlendState",
  "GpuBlendFactor",
  "GpuBlendOperation",
  "GpuShaderModule",
  "GpuShaderModuleDescriptor",
  "GpuRenderPipeline",
  "GpuRenderPipelineDescriptor",
  "GpuCommandEncoder",
  "GpuRenderPassEncoder",
  "GpuRenderPassDescriptor",
  "GpuRenderPassColorAttachment",
  "GpuQueue",
  "GpuExtent3dDict",
  "GpuCopyExternalImageDestInfo",
  "GpuCopyExternalImageSourceInfo",
  "GpuFilterMode",
  "GpuTextureBindingLayout",
  "GpuSamplerBindingLayout",
  "GpuPipelineLayoutDescriptor",
  "GpuVertexState",
  "GpuFragmentState",
  "GpuColorTargetState",
  "GpuColorDict",
  "GpuLoadOp",
  "GpuStoreOp",
  "GpuComputePipeline",
  "GpuComputePassDescriptor",
  "GpuComputePassEncoder",
  "GpuBufferBindingLayout",
  "GpuComputePipelineDescriptor",
  "GpuProgrammableStage",
  "GpuCanvasAlphaMode",
  "gpu_texture_usage",
  "GpuPrimitiveState",
  "GpuPrimitiveTopology",
  "GpuPipelineLayout",
  "GpuCommandBuffer",
  "gpu_shader_stage",
  "GpuVertexAttribute",
  "GpuVertexFormat",
  "GpuVertexBufferLayout",
  "GpuVertexStepMode",
  "GpuBuffer",
  "GpuBufferDescriptor",
  "gpu_buffer_usage",
  "GpuBufferBindingType",
]